b[overallTrialNum %in% c(a[, overallTrialNum])]
a <- df1[blockType != "practice", .(choiceText, rt, overallTrialNum, rtEffortTask, accEffortTask, blockNumber)]
b <- df2[blockType != "practice", .(overallTrialNum = mean(as.numeric(blockType), na.rm = T), rt = mean(rt, na.rm = T), acc = mean(acc, na.rm = T)), by = .(blockType)]
b <- b[overallTrialNum %in% c(a[, overallTrialNum])]
a
b
# compare means (should return EXACTLY THE SAME value)
a[, .(rtEffortTask = mean(rtEffortTask, na.rm = T), accEffortTask = mean(accEffortTask, na.rm = T))]
b[, .(rt = mean(rt, na.rm = T), acc = mean(acc, na.rm = T))]
a
b
#' ---
#' title: "Sacred values"
#' author: "Hause Lin"
#' date: "`r format(Sys.Date())`"
#' output: github_document
#' ---
#' Last modified by Hause Lin 14-02-18 15:28 hauselin@gmail.com
rm(list = ls())
library(tidyverse); library(data.table); library(broom); library(dtplyr); library(lme4); library(lmerTest); library(ggbeeswarm); library(cowplot)
setwd("/Users/Hause/Dropbox/Working Projects/160901 Sacred values/Analysis sacred values studies 1-3/")
rm(list = ls())
# Last modified by Hause Lin 08-11-17 20:59 hauselin@gmail.com
library(dplyr); library(data.table); library(ggplot2); library(tidyr); library(broom); library(dtplyr); library(cowplot); library(lme4); library(lmerTest); library(tibble); library(ggbeeswarm)
setwd("/Users/Hause/Dropbox/Working Projects/160901 Sacred values/Analysis sacred values 3") # set working directory
source('/Users/Hause/Dropbox/Working Datasets/functionsR/reportMLM.R')
source('/Users/Hause/Dropbox/Working Datasets/functionsR/reportLM.R')
source('/Users/Hause/Dropbox/Working Datasets/functionsR/summarySE.R')
# load("analysis.RData")
subjectData <- '/Users/Hause/Dropbox/Working Projects/160901 Sacred values/SacredValues3/SubjectData' #SubjectData path
####set up file paths and directories####
dataDir <- list.files(subjectData, full.names = T) #full path to all files/directories in raw data folder
filesInDir <- list.files(dataDir, full.names = T) #path to all files inside each person's data folder
filesToRead <- filesInDir[grep(pattern = 'ChoiceData_', x = filesInDir)] #paths to all the ChoiceData_*.txt files (does this by identifying which files contains the pattern 'ChoiceData_')
####read all data into R####
dataRaw <- lapply(1:length(filesToRead), function(x) tbl_dt(fread(filesToRead[x]))) #read all ChoiceData_*.txt files and store in a list
dataRaw[[2]]
readData <- function(x) {
print(x)
tbl_dt(fread(filesToRead[x])
}
readData <- function(x){
print(x)
tbl_dt(fread(filesToRead[x]))
}
dataRaw <- lapply(1:length(filesToRead), readData(filesToRead[x])) #read all ChoiceData_*.txt files and store in a list
dataRaw <- lapply(1:length(filesToRead), function(x) readData(filesToRead[x])) #read all ChoiceData_*.txt files and store in a list
####set up file paths and directories####
dataDir <- list.files(subjectData, full.names = T) #full path to all files/directories in raw data folder
filesInDir <- list.files(dataDir, full.names = T) #path to all files inside each person's data folder
filesToRead <- filesInDir[grep(pattern = 'ChoiceData_', x = filesInDir)] #paths to all the ChoiceData_*.txt files (does this by identifying which files contains the pattern 'ChoiceData_')
filesToRead
filesToRead
####read all data into R####
readData <- function(x){
print(x)
tbl_dt(fread(filesToRead[x]))
}
filesToRead
readData <- function(x){
filename <- filesToRead[x]
print(filename)
# tbl_dt(fread(filesToRead[x]))
}
lapply(1:length(filesToRead), function(x) readData(x))
filesToRead
rm(list = ls())
# Last modified by Hause Lin 08-11-17 20:59 hauselin@gmail.com
library(dplyr); library(data.table); library(ggplot2); library(tidyr); library(broom); library(dtplyr); library(cowplot); library(lme4); library(lmerTest); library(tibble); library(ggbeeswarm)
setwd("/Users/Hause/Dropbox/Working Projects/160901 Sacred values/Analysis sacred values 3") # set working directory
source('/Users/Hause/Dropbox/Working Datasets/functionsR/reportMLM.R')
source('/Users/Hause/Dropbox/Working Datasets/functionsR/reportLM.R')
source('/Users/Hause/Dropbox/Working Datasets/functionsR/summarySE.R')
# load("analysis.RData")
subjectData <- '/Users/Hause/Dropbox/Working Projects/160901 Sacred values/SacredValues3/SubjectData' #SubjectData path
####set up file paths and directories####
dataDir <- list.files(subjectData, full.names = T) #full path to all files/directories in raw data folder
filesInDir <- list.files(dataDir, full.names = T) #path to all files inside each person's data folder
filesToRead <- filesInDir[grep(pattern = 'ChoiceData_', x = filesInDir)] #paths to all the ChoiceData_*.txt files (does this by identifying which files contains the pattern 'ChoiceData_')
####read all data into R####
readData <- function(x){
filename <- filesToRead[x]
print(filename)
# tbl_dt(fread(filesToRead[x]))
}
lapply(1:length(filesToRead), function(x) readData(x))
readData <- function(x){
filename <- filesToRead[x]
print(filename)
tbl_dt(fread(filesToRead[x]))
}
lapply(1:length(filesToRead), function(x) readData(x))
lapply(1:length(filesToRead), function(x) readData(x))
lapply(1:length(filesToRead), function(x) readData(x))
lapply(1:length(filesToRead), function(x) readData(x))
filesToRead <- filesInDir[grep(pattern = 'ChoiceData_', x = filesInDir)] #paths to all the ChoiceData_*.txt files (does this by identifying which files
readData <- function(x){
filename <- filesToRead[x]
print(filename)
tbl_dt(fread(filesToRead[x]))
}
lapply(1:length(filesToRead), function(x) readData(x))
readData <- function(x){
filename <- filesToRead[x]
print(filename)
tbl_dt(fread(filesToRead[x]))
}
lapply(1:length(filesToRead), function(x) readData(x))
readData <- function(x){
filename <- filesToRead[x]
print(filesToRead[x])
print(filename)
tbl_dt(fread(filesToRead[x]))
}
lapply(1:length(filesToRead), function(x) readData(x))
readData <- function(x){
filename <- filesToRead[x]
print(x)
print(filename)
tbl_dt(fread(filesToRead[x]))
}
lapply(1:length(filesToRead), function(x) readData(x))
fread(filesToRead[8])
####set up file paths and directories####
dataDir <- list.files(subjectData, full.names = T) #full path to all files/directories in raw data folder
filesInDir <- list.files(dataDir, full.names = T) #path to all files inside each person's data folder
filesToRead <- filesInDir[grep(pattern = 'ChoiceData_', x = filesInDir)] #paths to all the ChoiceData_*.txt files (does this by identifying which files contains the pattern 'ChoiceData_')
####read all data into R####
readData <- function(x){
filename <- filesToRead[x]
print(x)
print(filename)
tbl_dt(fread(filesToRead[x]))
}
lapply(1:length(filesToRead), function(x) readData(x))
####set up file paths and directories####
dataDir <- list.files(subjectData, full.names = T) #full path to all files/directories in raw data folder
filesInDir <- list.files(dataDir, full.names = T) #path to all files inside each person's data folder
filesToRead <- filesInDir[grep(pattern = 'ChoiceData_', x = filesInDir)] #paths to all the ChoiceData_*.txt files (does this by identifying which files contains the pattern 'ChoiceData_')
readData <- function(x){
filename <- filesToRead[x]
print(x)
print(filename)
tbl_dt(fread(filesToRead[x]))
}
d <- lapply(1:length(filesToRead), function(x) readData(x))
filesInDir <- list.files(dataDir, full.names = T) #path to all files inside each person's data folder
filesToRead <- filesInDir[grep(pattern = 'ChoiceData_', x = filesInDir)] #paths to all the ChoiceData_*.txt files (does this by identifying which files contains the pattern 'ChoiceData_')
####read all data into R####
readData <- function(x){
filename <- filesToRead[x]
print(x)
print(filename)
tbl_dt(fread(filesToRead[x]))
}
d <- lapply(1:length(filesToRead), function(x) readData(x))
####set up file paths and directories####
dataDir <- list.files(subjectData, full.names = T) #full path to all files/directories in raw data folder
filesInDir <- list.files(dataDir, full.names = T) #path to all files inside each person's data folder
filesToRead <- filesInDir[grep(pattern = 'ChoiceData_', x = filesInDir)] #paths to all the ChoiceData_*.txt files (does this by identifying which files contains the pattern 'ChoiceData_')
####read all data into R####
readData <- function(x){
filename <- filesToRead[x]
print(x)
print(filename)
tbl_dt(fread(filesToRead[x]))
}
d <- lapply(1:length(filesToRead), function(x) readData(x))
fread(filesToRead[59)
fread(filesToRead[59])
fread(filesToRead[59])
fread(filesToRead[58])
d <- lapply(1:length(filesToRead), function(x) readData(x))
tbl_dt(fread(filesToRead[58]))
tbl_dt(fread(filesToRead[57]))
tbl_dt(fread(filesToRead[59]))
d <- lapply(1:length(filesToRead), function(x) readData(x))
tbl_dt(fread(filesToRead[56]))
tbl_dt(fread(filesToRead[57]))
tbl_dt(fread(filesToRead[59]))
tbl_dt(fread(filesToRead[60]))
tbl_dt(fread(filesToRead[60]))
tbl_dt(fread(filesToRead[60]))
tbl_dt(fread(filesToRead[60]))
d <- lapply(1:length(filesToRead), function(x) readData(x))
####set up file paths and directories####
dataDir <- list.files(subjectData, full.names = T) #full path to all files/directories in raw data folder
filesInDir <- list.files(dataDir, full.names = T) #path to all files inside each person's data folder
filesToRead <- filesInDir[grep(pattern = 'ChoiceData_', x = filesInDir)] #paths to all the ChoiceData_*.txt files (does this by identifying which files contains the pattern 'ChoiceData_')
readData <- function(x){
filename <- filesToRead[x]
print(x)
print(filename)
tbl_dt(fread(filesToRead[x]))
}
d <- lapply(1:length(filesToRead), function(x) readData(x))
tbl_dt(fread(filesToRead[56]))
tbl_dt(fread(filesToRead[57]))
tbl_dt(fread(filesToRead[59]))
tbl_dt(fread(filesToRead[58]))
tbl_dt(fread(filesToRead[59]))
tbl_dt(fread(filesToRead[60]))
tbl_dt(fread(filesToRead[61]))
tbl_dt(fread(filesToRead[61]))
d <- lapply(1:length(filesToRead), function(x) readData(x))
1:length(filesToRead)
d <- lapply(1:length(filesToRead), function(x) readData(x))
tbl_dt(fread(filesToRead[56]))
tbl_dt(fread(filesToRead[57]))
tbl_dt(fread(filesToRead[58]))
tbl_dt(fread(filesToRead[59]))
tbl_dt(fread(filesToRead[60]))
tbl_dt(fread(filesToRead[61]))
subjectData <- '/Users/Hause/Dropbox/Working Projects/160901 Sacred values/SacredValues3/SubjectData' #SubjectData path
####set up file paths and directories####
dataDir <- list.files(subjectData, full.names = T) #full path to all files/directories in raw data folder
filesInDir <- list.files(dataDir, full.names = T) #path to all files inside each person's data folder
filesToRead <- filesInDir[grep(pattern = 'ChoiceData_', x = filesInDir)] #paths to all the ChoiceData_*.txt files (does this by identifying which files contains the pattern 'ChoiceData_')
####read all data into R####
readData <- function(x){
filename <- filesToRead[x]
print(x)
print(filename)
tbl_dt(fread(filesToRead[x]))
}
d <- lapply(1:length(filesToRead), function(x) readData(x))
tbl_dt(fread(filesToRead[56]))
tbl_dt(fread(filesToRead[57]))
tbl_dt(fread(filesToRead[58]))
tbl_dt(fread(filesToRead[59]))
tbl_dt(fread(filesToRead[60]))
tbl_dt(fread(filesToRead[61]))
filesToRead
rm(list = ls())
# Last modified by Hause Lin 08-11-17 20:59 hauselin@gmail.com
library(dplyr); library(data.table); library(ggplot2); library(tidyr); library(broom); library(dtplyr); library(cowplot); library(lme4); library(lmerTest); library(tibble); library(ggbeeswarm)
setwd("/Users/Hause/Dropbox/Working Projects/160901 Sacred values/Analysis sacred values 3") # set working directory
source('/Users/Hause/Dropbox/Working Datasets/functionsR/reportMLM.R')
source('/Users/Hause/Dropbox/Working Datasets/functionsR/reportLM.R')
source('/Users/Hause/Dropbox/Working Datasets/functionsR/summarySE.R')
source('/Users/Hause/Dropbox/Working Datasets/functionsR/reportMLM.R')
source('/Users/Hause/Dropbox/Working Datasets/functionsR/reportLM.R')
source("/Users/Hause/Dropbox/Working Datasets/functionsR/se.R")
subjectData <- '/Users/Hause/Dropbox/Working Projects/160901 Sacred values/SacredValues3/SubjectData' #SubjectData path
####set up file paths and directories####
dataDir <- list.files(subjectData, full.names = T) #full path to all files/directories in raw data folder
filesInDir <- list.files(dataDir, full.names = T) #path to all files inside each person's data folder
filesToRead <- filesInDir[grep(pattern = 'ChoiceData_', x = filesInDir)] #paths to all the ChoiceData_*.txt files (does this by identifying which files contains the pattern 'ChoiceData_')
filesToRead
dataRaw <- lapply(1:length(filesToRead), function(x) tbl_dt(fread(filesToRead[x]))) #read all ChoiceData_*.txt files and store in a list
dataRaw <- lapply(1:length(filesToRead), function(x) tbl_dt(read.csv(filesToRead[x]))) #read all ChoiceData_*.txt files and store in a list
dataRaw
dataRaw <- lapply(1:length(filesToRead), function(x) tbl_dt(read.table(filesToRead[x]))) #read all ChoiceData_*.txt files and store in a list
dataRaw <- lapply(1:length(filesToRead), function(x) tbl_dt(fread(filesToRead[x]))) #read all ChoiceData_*.txt files and store in a list
filesToRead
for (i in 1:length(filesToRead)) {
dim(tbl_dt(fread(filesToRead[i])))
}
for (i in 1:length(filesToRead)) {
print(dim(tbl_dt(fread(filesToRead[i]))))
}
filesToRead
for (i in 1:length(filesToRead)) {
print(dim(tbl_dt(fread(filesToRead[i]))))
}
filesToRead
tryCatch(1, finally = print("Hello"))
tryCatch(1, finally = print("Hello"))
tryCatch(1, finally = print("Hello"))
tryCatch(1, finally = print("Hello"))
for (i in 1:length(filesToRead)) {
print(dim(tbl_dt(fread(filesToRead[i]))))
}
for (i in 1:length(filesToRead)) {
print(filesToRead[i])
print(dim(tbl_dt(fread(filesToRead[i]))))
}
for (i in 1:length(filesToRead)) {
print(filesToRead[i])
print(dim(tbl_dt(fread(filesToRead[i]))))
print("done")
}
for (i in 1:length(filesToRead)) {
print(i)
print(filesToRead[i])
print(dim(tbl_dt(fread(filesToRead[i]))))
print("done")
}
for (i in 1:length(filesToRead)) {
print(i)
print(filesToRead[i])
print(dim(tbl_dt(fread(filesToRead[i]))))
print("done\n")
}
filesToRead
for (i in 1:length(filesToRead)) {
print(i)
print(filesToRead[i])
print(dim(tbl_dt(fread(filesToRead[i]))))
print("done")
}
tbl_dt(fread(filesToRead[10]))
read.table(filesToRead[10])
for (i in 1:length(filesToRead)) {
print(i)
print(filesToRead[i])
print(dim(tbl_dt(fread(filesToRead[i]))))
print("done")
}
filesToRead <- filesInDir[grep(pattern = 'ChoiceData_', x = filesInDir)] #paths to all the ChoiceData_*.txt files (does this by identifying which files contains the pattern 'ChoiceData_')
####read all data into R####
filesToRead
for (i in 1:length(filesToRead)) {
print(i)
print(filesToRead[i])
print(dim(tbl_dt(fread(filesToRead[i]))))
print("done")
}
filesInDir <- list.files(dataDir, full.names = T) #path to all files inside each person's data folder
filesToRead <- filesInDir[grep(pattern = 'ChoiceData_', x = filesInDir)] #paths to all the ChoiceData_*.txt files (does this by identifying which files contains the pattern 'ChoiceData_')
####read all data into R####
filesToRead
for (i in 1:length(filesToRead)) {
print(i)
print(filesToRead[i])
print(dim(tbl_dt(fread(filesToRead[i]))))
print("done")
}
####set up file paths and directories####
dataDir <- list.files(subjectData, full.names = T) #full path to all files/directories in raw data folder
filesInDir <- list.files(dataDir, full.names = T) #path to all files inside each person's data folder
filesToRead <- filesInDir[grep(pattern = 'ChoiceData_', x = filesInDir)] #paths to all the ChoiceData_*.txt files (does this by identifying which files contains the pattern 'ChoiceData_')
####read all data into R####
filesToRead
for (i in 1:length(filesToRead)) {
print(i)
print(filesToRead[i])
print(dim(tbl_dt(fread(filesToRead[i]))))
print("done")
}
1:length(filesToRead)
tbl_dt(fread(filesToRead[72]))
read.table(filesToRead[72])
tbl_dt(fread(filesToRead[73]))
read.table(filesToRead[73])
tbl_dt(fread(filesToRead[74]))
read.table(filesToRead[74])
####set up file paths and directories####
dataDir <- list.files(subjectData, full.names = T) #full path to all files/directories in raw data folder
filesInDir <- list.files(dataDir, full.names = T) #path to all files inside each person's data folder
filesToRead <- filesInDir[grep(pattern = 'ChoiceData_', x = filesInDir)] #paths to all the ChoiceData_*.txt files (does this by identifying which files contains the pattern 'ChoiceData_')
####read all data into R####
filesToRead
for (i in 1:length(filesToRead)) {
print(i)
print(filesToRead[i])
print(dim(tbl_dt(fread(filesToRead[i]))))
print("done")
}
filesToRead
####set up file paths and directories####
dataDir <- list.files(subjectData, full.names = T) #full path to all files/directories in raw data folder
filesInDir <- list.files(dataDir, full.names = T) #path to all files inside each person's data folder
filesToRead <- filesInDir[grep(pattern = 'ChoiceData_', x = filesInDir)] #paths to all the ChoiceData_*.txt files (does this by identifying which files contains the pattern 'ChoiceData_')
filesToRead
dataRaw <- lapply(1:length(filesToRead), function(x) tbl_dt(fread(filesToRead[x]))) #read all ChoiceData_*.txt files and store in a list
dataRaw
####read all data into R####
filesToRead
for (i in 1:length(filesToRead)) {
print(i)
print(filesToRead[i])
print(dim(tbl_dt(fread(filesToRead[i]))))
print("done")
}
rm(list = ls())
# Last modified by Hause Lin 08-11-17 20:59 hauselin@gmail.com
library(dplyr); library(data.table); library(ggplot2); library(tidyr); library(broom); library(dtplyr); library(cowplot); library(lme4); library(lmerTest); library(tibble); library(ggbeeswarm)
setwd("/Users/Hause/Dropbox/Working Projects/160901 Sacred values/Analysis sacred values 3") # set working directory
source('/Users/Hause/Dropbox/Working Datasets/functionsR/reportMLM.R')
source('/Users/Hause/Dropbox/Working Datasets/functionsR/reportLM.R')
source("/Users/Hause/Dropbox/Working Datasets/functionsR/se.R")
# load("analysis.RData")
subjectData <- '/Users/Hause/Dropbox/Working Projects/160901 Sacred values/SacredValues3/SubjectData' #SubjectData path
####set up file paths and directories####
dataDir <- list.files(subjectData, full.names = T) #full path to all files/directories in raw data folder
filesInDir <- list.files(dataDir, full.names = T) #path to all files inside each person's data folder
filesToRead <- filesInDir[grep(pattern = 'ChoiceData_', x = filesInDir)] #paths to all the ChoiceData_*.txt files (does this by identifying which files contains the pattern 'ChoiceData_')
filesToRead
for (i in 1:length(filesToRead)) {
print(i)
print(filesToRead[i])
print(dim(tbl_dt(fread(filesToRead[i]))))
print("done")
}
tbl_dt(fread(filesToRead[74]))
read.table(filesToRead[74])
filesToRead
dataRaw <- lapply(1:length(filesToRead), function(x) tbl_dt(fread(filesToRead[x]))) #read all ChoiceData_*.txt files and store in a list
dataRaw[[2]]
dataRaw
dataRaw <- tbl_dt(rbindlist(dataRaw)) #convert that list to a dataframe
dataRaw
read.table("/Users/Hause/Desktop/ChoiceData_107.txt")
library(tidyverse); library(data.table); library(broom); library(dtplyr); library(lme4); library(lmerTest); library(ggbeeswarm); library(cowplot)
setwd('/Users/Hause/Dropbox/Working Projects/Effort/Scripts/v3/')
df1 <- tbl_dt(fread("101-2018-02-15-09-45-22-effortTraining.csv")) # choice task
df2 <- tbl_dt(fread("101-2018-02-15-09-45-22-stroop3coloursChoiceTask.csv")) # actual performance
df1[, acc := as.numeric(acc)]
df2[, acc := as.numeric(acc)]
library(tidyverse); library(data.table); library(broom); library(dtplyr); library(lme4); library(lmerTest); library(ggbeeswarm); library(cowplot)
setwd('/Users/Hause/Dropbox/Working Projects/Effort/Scripts/v3/')
df1 <- tbl_dt(fread("102-2018-02-15-10-04-21-effortTraining.csv")) # choice task
df1 <- tbl_dt(fread("102-2018-02-15-10-04-21-effortTraining.csv")) # choice task
df2 <- tbl_dt(fread("102-2018-02-15-12-10-57-stroop3coloursChoiceTask.csv")) # actual performance
df1[, acc := as.numeric(acc)]
df2[, acc := as.numeric(acc)]
df1[, .(rt, acc, overallTrialNum, accEffortTask, rtEffortTask)]
df1[!is.na(rt), .(rt, acc, overallTrialNum, accEffortTask, rtEffortTask)]
a <- df1[blockType != "practice", .(choiceText, rt, overallTrialNum, rtEffortTask, accEffortTask, blockNumber)]
b <- df2[blockType != "practice", .(overallTrialNum = mean(as.numeric(blockType), na.rm = T), rt = mean(rt, na.rm = T), acc = mean(acc, na.rm = T)), by = .(blockType)]
b <- b[overallTrialNum %in% c(a[, overallTrialNum])]
a
b
a
df1[, .(rt, acc, overallTrialNum, accEffortTask, rtEffortTask)]
df1[!is.na(rt), .(rt, acc, overallTrialNum, accEffortTask, rtEffortTask)]
df1 <- tbl_dt(fread("102-2018-02-15-10-04-21-effortTraining.csv")) # choice task
df1
df1 <- tbl_dt(fread("102-2018-02-15-10-04-21-effortTraining.csv")) # choice task
df1 <- tbl_dt(fread("102-2018-02-15-10-04-21-effortTraining.csv")) # choice task
df2 <- tbl_dt(fread("102-2018-02-15-10-04-21-stroop3coloursChoiceTask.csv")) # actual performance
df1[, acc := as.numeric(acc)]
df2[, acc := as.numeric(acc)]
df1[, .(rt, acc, overallTrialNum, accEffortTask, rtEffortTask)]
df1[!is.na(rt), .(rt, acc, overallTrialNum, accEffortTask, rtEffortTask)]
df1
df2
df1 <- tbl_dt(fread("102-2018-02-15-12-10-57-effortTraining.csv")) # choice task
df2 <- tbl_dt(fread("102-2018-02-15-12-10-57-stroop3coloursChoiceTask.csv")) # actual performance
df1[, acc := as.numeric(acc)]
df2[, acc := as.numeric(acc)]
df1[, .(rt, acc, overallTrialNum, accEffortTask, rtEffortTask)]
df1[!is.na(rt), .(rt, acc, overallTrialNum, accEffortTask, rtEffortTask)]
a <- df1[blockType != "practice", .(choiceText, rt, overallTrialNum, rtEffortTask, accEffortTask, blockNumber)]
b <- df2[blockType != "practice", .(overallTrialNum = mean(as.numeric(blockType), na.rm = T), rt = mean(rt, na.rm = T), acc = mean(acc, na.rm = T)), by = .(blockType)]
b <- b[overallTrialNum %in% c(a[, overallTrialNum])]
a
b
# compare means (should return EXACTLY THE SAME value)
a[, .(rtEffortTask = mean(rtEffortTask, na.rm = T), accEffortTask = mean(accEffortTask, na.rm = T))]
b[, .(rt = mean(rt, na.rm = T), acc = mean(acc, na.rm = T))]
df1 <- tbl_dt(fread("103-2018-02-15-12-31-52-effortTraining.csv")) # choice task
df2 <- tbl_dt(fread("103-2018-02-15-12-31-52-stroop3coloursChoiceTask.csv")) # actual performance
df1[, acc := as.numeric(acc)]
df2[, acc := as.numeric(acc)]
df1[, .(rt, acc, overallTrialNum, accEffortTask, rtEffortTask)]
df1[!is.na(rt), .(rt, acc, overallTrialNum, accEffortTask, rtEffortTask)]
a <- df1[blockType != "practice", .(choiceText, rt, overallTrialNum, rtEffortTask, accEffortTask, blockNumber)]
b <- df2[blockType != "practice", .(overallTrialNum = mean(as.numeric(blockType), na.rm = T), rt = mean(rt, na.rm = T), acc = mean(acc, na.rm = T)), by = .(blockType)]
b <- b[overallTrialNum %in% c(a[, overallTrialNum])]
a
b
# compare means (should return EXACTLY THE SAME value)
a[, .(rtEffortTask = mean(rtEffortTask, na.rm = T), accEffortTask = mean(accEffortTask, na.rm = T))]
b[, .(rt = mean(rt, na.rm = T), acc = mean(acc, na.rm = T))]
df1 <- tbl_dt(fread("103-2018-02-15-12-31-52-switchTraining.csv")) # choice task
df2 <- tbl_dt(fread("103-2018-02-15-12-31-52-shiftingLetterNumber.csv")) # actual performance
df1[, acc := as.numeric(acc)]
df2[, acc := as.numeric(acc)]
df1[, .(rt, acc, overallTrialNum, accEffortTask, rtEffortTask)]
df1[!is.na(rt), .(rt, acc, overallTrialNum, accEffortTask, rtEffortTask)]
a <- df1[blockType != "practice", .(choiceText, rt, overallTrialNum, rtEffortTask, accEffortTask, blockNumber)]
b <- df2[blockType != "practice", .(overallTrialNum = mean(as.numeric(blockType), na.rm = T), rt = mean(rt, na.rm = T), acc = mean(acc, na.rm = T)), by = .(blockType)]
b <- b[overallTrialNum %in% c(a[, overallTrialNum])]
a
b
# compare means (should return EXACTLY THE SAME value)
a[, .(rtEffortTask = mean(rtEffortTask, na.rm = T), accEffortTask = mean(accEffortTask, na.rm = T))]
b[, .(rt = mean(rt, na.rm = T), acc = mean(acc, na.rm = T))]
df1 <- tbl_dt(fread("103-2018-02-15-12-31-52-updateTraining.csv")) # choice task
df2 <- tbl_dt(fread("103-2018-02-15-12-31-52-mentalMathUpdating.csv")) # actual performance
df1[, acc := as.numeric(acc)]
df2[, acc := as.numeric(acc)]
df1[, .(rt, acc, overallTrialNum, accEffortTask, rtEffortTask)]
df1[!is.na(rt), .(rt, acc, overallTrialNum, accEffortTask, rtEffortTask)]
a <- df1[blockType != "practice", .(choiceText, rt, overallTrialNum, rtEffortTask, accEffortTask, blockNumber)]
b <- df2[blockType != "practice", .(overallTrialNum = mean(as.numeric(blockType), na.rm = T), rt = mean(rt, na.rm = T), acc = mean(acc, na.rm = T)), by = .(blockType)]
b <- b[overallTrialNum %in% c(a[, overallTrialNum])]
a
b
# compare means (should return EXACTLY THE SAME value)
a[, .(rtEffortTask = mean(rtEffortTask, na.rm = T), accEffortTask = mean(accEffortTask, na.rm = T))]
b[, .(rt = mean(rt, na.rm = T), acc = mean(acc, na.rm = T))]
install.packages("eyelinker")
library(eyelinker)
library(devtools)
install_github('jashubbard/edfR')
install.packages('devtools')
library(devtools)
install_github('jashubbard/edfR')
library(edfR)
library(tidyverse); library(data.table); library(broom); library(dtplyr); library(lme4); library(lmerTest); library(ggbeeswarm); library(cowplot)
df <- tbl_dt(edf.samples(EDFfile = "currentEDF"/Users/Hause/Desktop/77.edf, fields = c("time", "gxR", "gyR", "paR"), eventmask = F))
df <- tbl_dt(edf.samples(EDFfile = "/Users/Hause/Desktop/77.edf", fields = c("time", "gxR", "gyR", "paR"), eventmask = F))
df
file <- "/Users/Hause/Desktop/77.edf"
file <- "/Users/Hause/Desktop/77.edf"
df <- tbl_dt(edf.samples(EDFfile = file, fields = c("time", "gxR", "gyR", "paR"), eventmask = F))
messages <- tbl_dt(edf.messages(EDFfile = file))
messages
messages %>% print(n = Inf)
